import { hashCode } from '../../core/hash.js';
import { GAMMA_SRGB, TONEMAP_LINEAR, GAMMA_NONE } from '../constants.js';

class RenderingParams {
	constructor() {
		this._gammaCorrection = GAMMA_SRGB;
		this._toneMapping = TONEMAP_LINEAR;
		this._srgbRenderTarget = false;
		this._hash = void 0;
	}
	get hash() {
		if (this._hash === undefined) {
			const key = `${this.gammaCorrection}_${this.toneMapping}_${this.srgbRenderTarget}`;
			this._hash = hashCode(key);
		}
		return this._hash;
	}
	markDirty() {
		this._hash = undefined;
	}
	set gammaCorrection(value) {
		if (this._gammaCorrection !== value) {
			this._gammaCorrection = value;
			this.markDirty();
		}
	}
	get gammaCorrection() {
		return this._gammaCorrection;
	}
	set toneMapping(value) {
		if (this._toneMapping !== value) {
			this._toneMapping = value;
			this.markDirty();
		}
	}
	get toneMapping() {
		return this._toneMapping;
	}
	set srgbRenderTarget(value) {
		if (this._srgbRenderTarget !== value) {
			this._srgbRenderTarget = value;
			this.markDirty();
		}
	}
	get srgbRenderTarget() {
		return this._srgbRenderTarget;
	}
	get shaderOutputGamma() {
		const gammaOutput = this._gammaCorrection === GAMMA_SRGB && !this._srgbRenderTarget;
		return gammaOutput ? GAMMA_SRGB : GAMMA_NONE;
	}
}

export { RenderingParams };
